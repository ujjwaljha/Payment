// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Payment.Models;

namespace Payment.Migrations
{
    [DbContext(typeof(PaymentContext))]
    [Migration("20200613104857_priceMandatoryForHardware")]
    partial class priceMandatoryForHardware
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Payment.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifyBy");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("LookUpCountry");
                });

            modelBuilder.Entity("Payment.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<byte>("DiscountPercent");

                    b.Property<int>("FrequencyId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiyBy");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PackageId");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyId");

                    b.HasIndex("PackageId");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Payment.Models.Frequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifyBy");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime");

                    b.Property<byte>("MonthNumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("LookUpFrequency");
                });

            modelBuilder.Entity("Payment.Models.Hardware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifyBy");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(8, 2)");

                    b.HasKey("Id");

                    b.ToTable("LookUpHardware");
                });

            modelBuilder.Entity("Payment.Models.Installation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiyBy");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PackageId");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(8, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.ToTable("Installation");
                });

            modelBuilder.Entity("Payment.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifyBy");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(8, 2)");

                    b.HasKey("Id");

                    b.ToTable("LookUpPackage");
                });

            modelBuilder.Entity("Payment.Models.PackageHardware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("HardwareId");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifiyBy");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime");

                    b.Property<int>("PackageId");

                    b.HasKey("Id");

                    b.HasIndex("HardwareId");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageHardware");
                });

            modelBuilder.Entity("Payment.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("ModifyBy");

                    b.Property<DateTime?>("ModifyOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("LookUpPaymentMethod");
                });

            modelBuilder.Entity("Payment.Models.Discount", b =>
                {
                    b.HasOne("Payment.Models.Frequency", "Frequency")
                        .WithMany("Discount")
                        .HasForeignKey("FrequencyId")
                        .HasConstraintName("FK_Discount_Frequency_FrequencyId");

                    b.HasOne("Payment.Models.Package", "Package")
                        .WithMany("Discount")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_Discount_Package_PackageId");
                });

            modelBuilder.Entity("Payment.Models.Installation", b =>
                {
                    b.HasOne("Payment.Models.Package", "Package")
                        .WithMany("Installation")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_Istallation_Package_PackageId");
                });

            modelBuilder.Entity("Payment.Models.PackageHardware", b =>
                {
                    b.HasOne("Payment.Models.Hardware", "Hardware")
                        .WithMany("PackageHardware")
                        .HasForeignKey("HardwareId")
                        .HasConstraintName("FK_PackageHardware_Hardware_HardwareId");

                    b.HasOne("Payment.Models.Package", "Package")
                        .WithMany("PackageHardware")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_PackageHardware_Package_PackageId");
                });
#pragma warning restore 612, 618
        }
    }
}
